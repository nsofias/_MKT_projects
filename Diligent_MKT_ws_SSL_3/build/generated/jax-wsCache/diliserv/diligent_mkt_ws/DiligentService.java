
package diligent_mkt_ws;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.3
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "DiligentService", targetNamespace = "diligent.services.all", wsdlLocation = "http://10.232.63.13/diliserv?wsdl")
public class DiligentService
    extends Service
{

    private final static URL DILIGENTSERVICE_WSDL_LOCATION;
    private final static WebServiceException DILIGENTSERVICE_EXCEPTION;
    private final static QName DILIGENTSERVICE_QNAME = new QName("diligent.services.all", "DiligentService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://10.232.63.13/diliserv?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        DILIGENTSERVICE_WSDL_LOCATION = url;
        DILIGENTSERVICE_EXCEPTION = e;
    }

    public DiligentService() {
        super(__getWsdlLocation(), DILIGENTSERVICE_QNAME);
    }

    public DiligentService(WebServiceFeature... features) {
        super(__getWsdlLocation(), DILIGENTSERVICE_QNAME, features);
    }

    public DiligentService(URL wsdlLocation) {
        super(wsdlLocation, DILIGENTSERVICE_QNAME);
    }

    public DiligentService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, DILIGENTSERVICE_QNAME, features);
    }

    public DiligentService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DiligentService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns Application
     */
    @WebEndpoint(name = "Application")
    public Application getApplication() {
        return super.getPort(new QName("diligent.services.all", "Application"), Application.class);
    }

    /**
     * 
     * @param features
     *     A list of {&#064;link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the &lt;code&gt;features&lt;/code&gt; parameter will have their default values.
     * @return
     *     returns Application
     */
    @WebEndpoint(name = "Application")
    public Application getApplication(WebServiceFeature... features) {
        return super.getPort(new QName("diligent.services.all", "Application"), Application.class, features);
    }

    private static URL __getWsdlLocation() {
        if (DILIGENTSERVICE_EXCEPTION!= null) {
            throw DILIGENTSERVICE_EXCEPTION;
        }
        return DILIGENTSERVICE_WSDL_LOCATION;
    }

}
